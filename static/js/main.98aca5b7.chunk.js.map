{"version":3,"sources":["App.js","index.js"],"names":["App","state","contacts","filter","name","number","inputId","nanoid","handleChange","e","target","value","setState","submitForm","preventDefault","some","contact","toast","error","prevState","newContact","id","success","deleteContact","idBtn","onSubmit","this","type","onChange","pattern","title","required","toLowerCase","includes","map","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAIMA,E,4MACJC,MAAQ,CACNC,SAAU,GACVC,OAAQ,GACRC,KAAM,GACNC,OAAQ,I,EAGVC,QAAUC,c,EAEVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAG1BE,WAAa,SAAAJ,GACXA,EAAEK,iBACF,MAAmC,EAAKb,MAAhCG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,GADA,EAAsBH,SACTa,MAAK,SAAAC,GAAO,OAAIA,EAAQZ,OAASA,KAM5C,OALAa,IAAMC,MAAM,8CACV,EAAKN,UAAS,SAAAO,GAAS,MAAK,CAC5Bf,KAAM,GACRC,OAAQ,OAIV,IAAMe,EAAa,CACjBC,GAAId,cACJH,OACAC,UAEF,EAAKO,UAAS,SAAAO,GAAS,MAAK,CAC1BjB,SAAS,CAAEkB,GAAH,mBAAkBD,EAAUjB,WACpCE,KAAM,GACNC,OAAQ,OAEVY,IAAMK,QAAQ,kB,EAGhBC,cAAgB,SAAAC,GACd,EAAKZ,UAAS,SAAAO,GAAS,MAAK,CAC1BjB,SAAUiB,EAAUjB,SAASC,QAAO,SAAAa,GAAO,OAAIA,EAAQK,KAAOG,SAEhEP,IAAMK,QAAQ,uB,4CAGhB,WAAU,IAAD,OACP,OACE,qCACE,cAAC,IAAD,IACA,2CACA,uBAAMG,SAAUC,KAAKb,WAArB,UACE,yCAEE,uBACEc,KAAK,OACLvB,KAAK,OACLwB,SAAUF,KAAKlB,aACfG,MAAOe,KAAKzB,MAAMG,KAClByB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLvB,KAAK,SACLwB,SAAUF,KAAKlB,aACfG,MAAOe,KAAKzB,MAAMI,OAClBwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,4BAEF,oCACE,0CACA,0DAEE,uBACEA,KAAK,OACLvB,KAAK,SACLwB,SAAUF,KAAKlB,aACfG,MAAOe,KAAKzB,MAAME,OAClB0B,QAAQ,yHACRC,MAAM,8IAGV,6BACGJ,KAAKzB,MAAMC,SACTC,QAAO,SAAAa,GAAO,OACbA,EAAQZ,KACL4B,cACAC,SAAS,EAAKhC,MAAME,OAAO6B,kBAE/BE,KAAI,gBAAGb,EAAH,EAAGA,GAAIjB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACH,+BACGD,EADH,IACUC,EACR,wBAAQsB,KAAK,SAASQ,QAAS,kBAAM,EAAKZ,cAAcF,IAAxD,sBAFOA,kB,GAnGPe,aAiHHpC,IChHfqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.98aca5b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputId = nanoid();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitForm = e => {\r\n    e.preventDefault();\r\n    const { name, number, contacts } = this.state;\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      toast.error('contact with such name already exists')      \r\n        this.setState(prevState => ({\r\n        name: '',\r\n      number: '',\r\n    }))\r\n      return\r\n    }\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState(prevState => ({\r\n      contacts: [newContact, ...prevState.contacts],\r\n      name: '',\r\n      number: '',\r\n    }));\r\n    toast.success('contact added')\r\n  };\r\n\r\n  deleteContact = idBtn => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== idBtn),\r\n    }));\r\n    toast.success(\"delete is complete\")\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Toaster/>\r\n        <h1>Phonebook</h1>\r\n        <form onSubmit={this.submitForm}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n        <section>\r\n          <h2>Contacts</h2>\r\n          <label>\r\n            Find contacts by name\r\n            <input\r\n              type=\"text\"\r\n              name=\"filter\"\r\n              onChange={this.handleChange}\r\n              value={this.state.filter}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            />\r\n          </label>\r\n          <ul>\r\n            {this.state.contacts\r\n              .filter(contact =>\r\n                contact.name\r\n                  .toLowerCase()\r\n                  .includes(this.state.filter.toLowerCase())\r\n              )\r\n              .map(({ id, name, number }) => (\r\n                <li key={id}>\r\n                  {name}:{number}\r\n                  <button type=\"button\" onClick={() => this.deleteContact(id)}>\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}